# src/commands/decrypt-file.yaml

description: >
  Use this command to decrypt a local file using openssl aes-256-cbc key encryption. A typical use case would be in
  maintaining secure information in a code repository for use in a ci/cd pipeline. See examples for use. add some changes here

parameters:
  private-pem:
    description: public key of the rsa used by a pipeline for managing encrypted information stored in a repo
    type: env_var_name
    default: PIPELINE_PRIVATE_PEM

  stored-key:
    description: >
      filename of the file containing the key used to encrypt the encoded file. This key value was encrypted
      using the public key of the rsa used by a pipeline for managing encrypted information stored in a repo.
    type: string
    default: key.bin

  encoded-file:
    description: filename of encoded file to be decrypted
    type: string

steps:
  - run:
      name: check sha256sum for encoded key and encoded file
      command: |
        sha256sum --check --status << parameters.stored-key >>.enc.sha
        sha256sum --check --status << parameters.encoded-file >>.enc.sha
  - run:
      name: decode local encryption key using pipeline private.pem
      command: |
        openssl rsautl -decrypt -inkey << parameters.private-pem >> \
                -in << parameters.stored-key >>.enc \
                -out << parameters.stored-key >>
  - run:
      name: decode local file using local encryption key
      command: |
        openssl enc -d -aes-256-cbc \
                -in << parameters.encoded-file >>.enc \
                -out << parameters.encoded-file >> \
                -pass file:./<< parameters.stored-key >>
